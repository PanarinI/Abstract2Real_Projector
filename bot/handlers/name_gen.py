from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.handlers.states import BrandCreationStates

username_router = Router()


# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω–æ–π –º—ã—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@username_router.message(BrandCreationStates.waiting_for_context)
async def process_user_thought(message: types.Message, state: FSMContext):
    user_thought = message.text.strip()
    await state.update_data(user_thought=user_thought)

    await message.answer("üîÑ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã username –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–µ–π –º—ã—Å–ª–∏...")

    # üìç –ó–∞–≥–ª—É—à–∫–∞: –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ username
    generated_usernames = [
        "ProjectIdeaBot",
        "UniqueConceptBot",
        "BrandCreatorBot"
    ]

    await state.update_data(username_options=generated_usernames)

    kb = InlineKeyboardMarkup(inline_keyboard=[
                                                  [InlineKeyboardButton(text=f"@{username}",
                                                                        callback_data=f"choose_username:{username}")]
                                                  for username in generated_usernames
                                              ] + [[InlineKeyboardButton(text="üîÑ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é",
                                                                         callback_data="repeat_username_generation")]])

    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö username:",
        reply_markup=kb
    )
    await state.set_state(BrandCreationStates.waiting_for_username_choice)


# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–≤—Ç–æ—Ä–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é"
@username_router.callback_query(lambda c: c.data == "repeat_username_generation")
async def repeat_username_generation(query: types.CallbackQuery, state: FSMContext):
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback
    await process_user_thought(query.message, state)


# üìç –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ username
@username_router.callback_query(lambda c: c.data.startswith("choose_username:"))
async def process_username_choice(query: types.CallbackQuery, state: FSMContext):
    selected_username = query.data.split(":")[1]
    await state.update_data(username=selected_username)

    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º callback

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –±—Ä–µ–Ω–¥–∞
    from bot.handlers.brand_gen import start_format_stage
    await start_format_stage(query, state)
