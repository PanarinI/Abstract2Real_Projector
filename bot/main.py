import logging
import asyncio
import os
from dotenv import load_dotenv

from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.filters import CommandStart
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command

from bot.handlers.name_gen import username_router
from bot.handlers.brand_gen import brand_router
from bot.handlers.main_menu import main_menu_router  # –ü–æ–¥–∫–ª—é—á–∞–µ–º –≥–ª–∞–≤–Ω—ã–π —Ä–æ—É—Ç–µ—Ä
from database.database import init_db
from logger import setup_logging

setup_logging()
# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env
load_dotenv()

init_db() # –∑–∞–ø—É—Å–∫ –ë–î

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    raise ValueError("BOT_TOKEN not found in .env file")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –±–µ–∑ parse_mode
bot = Bot(token=BOT_TOKEN)

storage = MemoryStorage()
dp = Dispatcher(storage=storage)
dp.bot = bot  # –ü—Ä–∏–≤—è–∑–∫–∞ –±–æ—Ç–∞ –∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É –≤—Ä—É—á–Ω—É—é

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ (routers) –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ dp
dp.include_router(main_menu_router)
dp.include_router(username_router)
dp.include_router(brand_router)




# üìç –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(CommandStart())
async def cmd_start(message: types.Message):
    await message.answer(
        "–ó–¥–µ—Å—å –∏ —Å–µ–π—á–∞—Å –≤—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–µ—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –∏–∑ —Ç–æ–≥–æ, –æ —á–µ–º –≤—ã —Å–µ–π—á–∞—Å –¥—É–º–∞–µ—Ç–µ. –ü—Ä–æ—Å—Ç–æ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ - –≤–∞—Å —ç—Ç–æ –º–æ–∂–µ—Ç —É–¥–∏–≤–∏—Ç—å\n"
        "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üÜï –ù–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å", callback_data="create_brand")],
            [InlineKeyboardButton(text="üé≤ –ß—Ç–æ —ç—Ç–æ –∏ –∑–∞—á–µ–º", callback_data="help")],  # –ò–∑–º–µ–Ω–µ–Ω–æ callback_data
            [InlineKeyboardButton(text="üêæ –ú–∞—Å—Ç–µ—Ä—Å–∫–∞—è –ë–æ—Ç –∏ –ö–æ—Ç", url="https://t.me/bot_and_kot")],
        ])
    )


async def on_startup():
    await init_db()  # ‚úÖ –ó–∞–ø—É—Å–∫–∞–µ–º –ø—É–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∫ –ë–î –æ–¥–∏–Ω —Ä–∞–∑

async def main():
    logging.info("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞...")
    await on_startup()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î –ø–µ—Ä–µ–¥ —Å—Ç–∞—Ä—Ç–æ–º
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
